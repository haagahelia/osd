<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../xsl/course.xsl"?>
<course logo="img/app.svg" title="Orientation to Software Development">


	<part title="COURSE INFO" icon="off" type="default">
		<section type="info" title="KNOWLEDGE">
		<p>Welcome to the course Orientation to Software Production (SWD1TN001).
		Please attend the first lecture to learn more about the course. Still the most important information about the course is written on this site.</p>
		<slides title="Welcome to the course" url="slides/part0.html"/>
		<p>Watch a video to understand what kind of skills you are about to obtain.
		Watch another video to know how to get the best possible learning experience.
		</p>
		<video title="What are you able to do after this course?" youtubeid="JDw1ii7aKwg"/>
		<video title="Study Guidelines" youtubeid="JDw1ii7aKwg"/>
		<p>Check out the schedule of this course and the deadlines for the exercises from the timetable page.
		More information is also provided about the course facilities, such as lectures, exercise sessions and the learning material.
		Click the assessment button if you want to see how to pass this course and how many points you can get from an exercise.</p>
		<subpage icon="time" title="Timetable">
			<table class="table table-striped table-bordered table-condensed">
				<tr><th>WEEK</th><th>CONTENT</th><th>EXERCISE DEADLINE</th></tr>
				<tr><td>1</td><td>COURSE INFO, PART 1, PART 2</td><td>X.X.XXXX</td></tr>
				<tr><td>2</td><td>PART 3, PART 4</td><td>X.X.XXXX</td></tr>
				<tr><td>3</td><td>PART 5, PART 6</td><td>X.X.XXXX</td></tr>
				<tr><td>4</td><td>PART 7, PART 8</td><td>X.X.XXXX</td></tr>
				<tr><td>5</td><td>PART 9, PART 10</td><td>X.X.XXXX</td></tr>
				<tr><td>6</td><td>PART 11, PART 12</td><td>X.X.XXXX</td></tr>
				<tr><td>7</td><td>ROUNDUP, EXAM</td><td>X.X.XXXX</td></tr>
			</table>
		</subpage>
		<subpage icon="home" title="Facilities">
			<h4>Lectures</h4>
			<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
			<h4>Exercise sessions</h4>
			<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
			<h4>Material</h4>
			<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
		</subpage>
		<subpage icon="adjust" title="Assessment">
			<h4>Exam</h4>
			<p>The exam defines the grade base.</p>
			<h4>Exercises</h4>
			<p>If you have earned over 75% from the exercise points and you get at least grade 1 from the exam, your grade will be upgraded by 1.</p>
			<h5>Exercise points</h5>
			<table class="table table-striped table-bordered table-condensed">
			<tr><th>Size</th><th>Points</th></tr>
			<tr><td>S</td><td>1p</td></tr>
			<tr><td>M</td><td>3p</td></tr>
			<tr><td>L</td><td>5p</td></tr>
			<tr><td>XL</td><td>10p</td></tr>
			</table>
		</subpage>
		<p>Learning outcomes of the whole course are also gathered down in a list.</p>		
		<subpage icon="th-list" title="Learning outcomes">
			<ul>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
				<li>Lorem ipsum dolor sit amet</li>
			</ul>
		</subpage>
		</section>
		<section type="info" title="CHECKPOINT">
			<badgeImg><img src="img/badge00.png" alt="Badge 0" class="badgeicon"/></badgeImg>
			<ol>
				<li>Why this course is important?</li>
				<li>What can I do after this course?</li>
				<li>How to pass this course?</li>
				<li>How to study to get the best learning experience?</li>
				<li>Where can I find the theory?</li>
				<li>How to solve the exercises?</li>
				<li>When is the Exam?</li>
				<li>What kind of questions there is in the exam?</li>
				<li>How to prepare to the exam?</li>
				<li>What are the contents of this course?</li>
				<li>What the assessment criteria?</li>
			</ol>
		</section>
	</part>

	<part title="1 Software Development" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<p>Let's take a look at the industry, discuss the basic concepts and view what kind of education our curriculum provides.</p> 
		<slides title="Slideshow" url="slides/part1.html"/>
		<p>Learning to make applications by yourself is a vital skill to understand the challenges that there is in software development.</p> 
		<p><br/>An <b>Application</b> is a program, or group of programs, that is designed for the end user. Application software can be divided into  two general classes: systems software and applications software. Applications software (also called end-user programs) include such things as word processors, Web browsers, spreadsheets and databases.</p>
            <p><br/>A <b>programming language</b> is a special language programmers use to develop applications, scripts, or other set of instructions for computers to execute. </p>
            <p><br/><b>Interpreters</b> and <b>Compilers</b></p>
            <bookmark title="What are they?" url="https://www.youtube.com/watch?v=_C5AHaS1mOA"/>
        </section>
		<section type="success" title="SKILLS">
			<exercise file="xc/example.xml"/>
		</section>
		<section type="info" title="CHECKPOINT">
			<badgeImg><img src="img/badge01.png" alt="Badge 1" class="badgeicon"/></badgeImg>
			<ol>
				<li>Why software development is interesting?</li>
				<li>What is a program?</li>
				<li>What kind of programs there are?</li>
				<li>What is an application?</li>
				<li>What is programming?</li>
				<li>What kind of programming languages there are?</li>
				<li>What is a compiler?</li>
				<li>What is an interpreter?</li>
				<li>How applications are developed?</li>
				<li>What kind of markets there are for software development?</li>
				<li>What kind of markets there are for software developers?</li>
				<li>What kind of courses does the curriculum provide?</li>
		</ol>
		</section>
	</part>


	<part title="2 Algorithms" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<slides title="Slideshow" url="slides/part2.html"/>
		<bookmark title="Blockly Maze Game" url="https://blockly-games.appspot.com/maze?lang=en"/>
		<p>"An algorithm is any well-defined computational procedure that takes some value, or set of values, as input and produces some value, or set of values as output." In other words, algorithms are like road maps for accomplishing a given, well-defined task. (<i>Introduction to algorithms by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein</i>)</p>
        <p><img src="img/algorithm1.png"/></p>    
            <p><br/>One example of the algorithms is a code that calculates the terms of the Fibonacci sequence. Even a simple function for adding two numbers is an algorithm in a sense.</p>
            <p><br/>Algorithms can be expressed in many ways. One example is <b>Pseudocode</b>. Pseudocode contains following logical structures.</p>
			<ul>
				<li>Sequence logic</li>
				<li>Selection logic</li>
				<li>Iteration logic</li> 
            </ul>
            <p>These structures are proven to be sufficient for writing any computer program.</p>
            <p><pre><code>Pseudocode example
IF HoursWorked > NormalMax
  Display overtime message
ELSE 
  Display regular time message
</code></pre></p>  
        <p><br/>The other example is <b>Flowchart</b> which graphically shows the logical steps to carry out a task.</p>
        <p><img width="400" src="img/flowchart.png"/></p>               
        <p>Both of these techniques are widely used today. There are lot of benefits to achive by using these techiques like:
  			<ul>
				<li>Effective analysis and design</li>
				<li>Proper documentation</li>
				<li>Efficient Coding</li> 
            </ul>      
        </p>
<bookmark title="What's an algorithm?" url="https://www.youtube.com/watch?v=6hfOvs8pY1k"/>            
        </section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge02.png" alt="Badge 2" class="badgeicon"/></badgeImg>
		<ol>
		<li>Where do I need algorithms?</li>
		<li>How to instruct the computer?</li>
		<li>What is the idea of a condition?</li>
		<li>What is the idea of a loop?</li>
		<li>When do we need variables?</li>
		<li>What is a flow chart?</li>
		<li>How to make my first algorithm with blockly?</li>
		</ol>
		</section>
	</part>
	
	<part title="3 Environments" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		In what kind of an environment does the software run?
		What kind of an environment does a software developer need?
		This part will answer to these and some other important questions.
		<slides title="Slideshow" url="slides/part3.html"/>
		<video title="Haaga-Helia Xubuntu desktop" youtubeid="JDw1ii7aKwg"/>
		<video title="Write and publish a simple web page" youtubeid="JDw1ii7aKwg"/>
		<p>To see how to install Chromium browser on Xubuntu and how to use the developer toolbar, see the instructions below</p> 
		<subpage icon="wrench" title="Install Chromium Browser">
				<p><strong>Open Terminal Window</strong> by pressing</p>
				<pre><code class="language-none">Ctrl+Alt+T</code></pre>
				<p><strong>Install Chromium Browser</strong> by typing the following text into the terminal window</p>
				<pre><code class="language-bash">sudo apt-get install chromium-browser</code></pre>
				<p><strong>Open Chromium Browser</strong> by typing the following text into the terminal window</p>
				<pre><code class="language-bash">chromium-browser &amp;</code></pre>
				<p><strong>Open Developer Toolbar</strong> by pressing </p>
				<pre><code class="language-none">Ctrl+Shift+I</code></pre>
				<p>You can write a <strong>log</strong> text from your web page to the browser console by writing the following JavaScript-code. The console is located at the developer toolbar.</p>
				<pre><code class="language-javascript">Console.log("The text to be logged.");</code></pre>
		</subpage>
		
		<subpage icon="transfer" title="Access the production environment">
			<p>You can access the production environment with <strong>Secure Shell (SSH)</strong> by writing the following command in the terminal window</p>
			<pre><code class="language-bash">ssh username@servername
#for example
ssh a1234567@myy.haaga-helia.fi</code></pre>
			<p>On the remote host you can run common shell commands.</p>
			<p>Transferring a file from your local machine to the remote machine is easily done with <strong>Secure Copy (SCP)</strong> with the following command</p>
			<pre><code class="language-bash">scp filename username@servername:destinationfolder
#for example
scp mypage.html a1234567@myy.haaga-helia.fi:public_html
#or a folder and all of its subfolders recursively
scp -r foldername username@servername:destinationfolder</code></pre>
		</subpage>
		</section>
		
		
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge03.png" alt="Badge 3" class="badgeicon"/></badgeImg>
		<ol>
			<li>What kind of environments does a software developer need?</li>
			<li>What kind of tools does a software developer need?</li>
			<li>How to use the editor?</li>
			<li>What does the server do?</li>
			<li>How to use a browser developer toolbar?</li>
			<li>How to print logs to the console?</li>
			<li>How to publish my first application on localhost?</li>
			<li>How to publish my first application on the Internet?</li>
		</ol>
		</section>
	</part>
	
		<part title="4 JavaScript" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
			<slides title="Slideshow" url="slides/part4.html"/>
			<p style="color:red">TODO: CODE BLOCKS (head js, ext js, body js, onclick inline js)</p>
			<pre class="language-markup"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
function myListener() {
	console.log(&quot;******************&quot;);
	console.log(&quot;* BUTTON PRESSED *&quot;);
	console.log(&quot;******************&quot;);
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;button onclick=&quot;myListener()&quot;&gt;Press me!&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>JavaScript is an object oriented dynamic language. Its syntax comes from Java and C languages. With JavaScript you can for example:
    <ul>
        <li>Change HTML content</li>
        <li>Change HTML attributes</li>
        <li>Change HTML styles</li>
        <li>Validate data</li>
    </ul></p>
    <p><br/>In HTML, JavaScript code must be inserted between &lt;script&gt; and &lt;/script&gt; tags.</p>
    <p>Example<pre><code>&lt;script&gt;
  document.getElementById("demo").innerHTML = "My First JavaScript";
&lt;/script&gt;</code></pre></p>
    <p>You can place any number of scripts in an HTML document.</p><p>Scripts can be placed in the &lt;body&gt;, or in the &lt;head&gt; section of an HTML page, or in both.</p>
    <p>Scripts can also be placed in external files. External scripts are practical when the same code is used in many different web pages. JavaScript files have the file extension<b>.js</b>.
</p><p><br/>JavaScript <b>comments</b> can be used to explain JavaScript code, and to make it more readable. Single line comments start with //. Any text between // and the end of the line, will be ignored by JavaScript.
</p>
            
            <p>Example<pre><code>//This is my First comment
&lt;script&gt;
  document.getElementById("demo").innerHTML = "My First JavaScript";
&lt;/script&gt;</code></pre></p><p>Multi-line comments start with /* and end with */. Any text between /* and */ will be ignored by JavaScript.
</p>
    <p><br/>The HTML <b>DOM</b> is a standard object model and programming interface for HTML. It defines:</p>
    <ul>
        <li>The HTML elements as objects</li>
        <li>The properties of all HTML elements </li>
        <li>The methods to access all HTML elements</li>
        <li>The events for all HTML elements</li>
    </ul>
    <p><br/>In other words: The HTML DOM is a standard for how to get, change, add, or delete HTML elements.</p>
    <p>The HTML DOM model is constructed as a tree of Objects</p>
    <p><img src="img/dom_tree.png"/></p>              
    <bookmark title="w3schools JavaScript tutorial" url="http://www.w3schools.com/js/default.asp"/>        
		</section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge04.png" alt="Badge 4" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why JavaScript is important?</li>
		<li>What kind of language is JavaScript?</li>
		<li>Where can I run JavaScript code?</li>
		<li>How to add JavaScript Code to a web page?</li>
		<li>How to run JavaScript Code on a web page?</li>
		<li>How do I write code comments?</li>
		<li>Why do I write code comments?</li>
		<li>What is a dom tree?</li>
		<li>How to attach an event listener to a button?</li>
		</ol>
		</section>
	</part>
	
	<part title="5 Variables" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<p><img src="img/urlsquirrel_variable.png" class="bordered"/></p>
		<p>
		Variables are containers for storing data values.
		</p>
		<slides title="Slideshow" url="slides/part5.html"/>
		<pre><code>
//Example: a and b are variables
var a = 5;
var b = 10;</code></pre>
		<p>
Variables can be used in expressions (see artihmetic operators below).		
		</p>
		<pre><code>//Example: expression
var c = a + b;</code></pre><p>All variables must be indentified with unique names. Identifiers are case-sensitive in javascript.

In javaScript '=' operator is an assignment operator, not an equal to operator.</p>
<p>In JavaScript, there are tree primitive <b>datatypes</b>: String, Number and Boolean.</p>
<p>JavaScript is loosely typed which means that you don't have to declare the type of a variable.</p>
		<pre><code>// JavaScript primitive datatypes
var length = 100; // Number (Either integer or floating point numbers
var name = "John" // String
var x = true; // Boolean: true or false </code></pre>
            
		<p><b>Arithmetic operators</b> in JavaScript.</p>
		<p><table class="table table-striped table-bordered table-condensed">
		<tr><td>+</td><td>Addition</td></tr>
		<tr><td>-</td><td>Subtraction</td></tr>
		<tr><td>*</td><td>Multiplication</td></tr>
		<tr><td>/</td><td>Division</td></tr>
		<tr><td>%</td><td>Modulus</td></tr>
		<tr><td>++</td><td>Increment</td></tr>
		<tr><td>--</td><td>Decrement</td></tr>
		</table></p>
        <p>Operator precedence describes the order in which operations are performed in an arithmetic expression. As in traditional school      mathematics, multiplication (*) and division (/) have higher precedence than addition (+) and subraction (-). And the precedence can be changed by using parentheses.
        </p>
        <p>The increment operator (++) increments numbers and the decrement operator (--) decrements numbers.</p>
		<p><pre><code>// Example
var x = 3;
x++; // Increments x by one
 </code></pre></p>            
<bookmark title="w3schools Variable" url="http://www.w3schools.com/js/js_variables.asp"/>
		</section>
		<section type="success" title="SKILLS">
			<exercise file="xc/05.06.xml"/>
			<exercise file="xc/05.09.xml"/>
			<exercise file="xc/05.10.xml"/>
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge05.png" alt="Badge 5" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why and where do I need variables?</li>
		<li>What is the concept of a variable?</li>
		<li>What types of variables there are available?</li>
		<li>How to assign a value to a variable?</li>
		<li>How to read a value from a variable?</li>
		<li>How to debug the variable values?</li>
		<li>How do I show a variable value on a web page?</li>
		</ol>
		</section>
	</part>
	
	
	<part title="6 Conditions" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<slides title="Slideshow" url="slides/part6.html"/>
		<h3>If statement</h3>
		<p><b>If statement</b> defines a block of code which is executed if condition is true</p>
		<p><pre><code>
if (condition) {
    block of code to be executed if the condition is true
} 		
		</code></pre></p>
		<p><pre><code>
// Example		
if (hour &lt; 12) {
	say =  "Good morning";
}	
		</code></pre></p>				
		<h3>Else statement</h3>
		<p><b>Else statement</b> defines a block of code which is executed if condition is false</p>
		<p><pre><code>
if (condition) {
    block of code to be executed if the condition is true
} else { 
    block of code to be executed if the condition is false
}	
		</code></pre></p>
		<p><pre><code>
// Example		
if (score &lt; 100) {
	say = "Try again"; 
} 
else {
	say = "Well done";
}
		</code></pre></p>	
		<h3>Else if statement</h3>		
		<p><b>Else if statement</b> can be used to specify new condition if the first condition is false</p>
		<p><pre><code>
if (condition1) {
    block of code to be executed if condition1 is true
} else if (condition2) {
    block of code to be executed if the condition1 is false and condition2 is true
 } else {
    block of code to be executed if the condition1 is false and condition2 is false
}	
		</code></pre></p>
		<p><pre><code>
if (score &lt; 100) {
	say = "Try again"; 
} 
else if (score &lt; 1000){
	say = "Well done";
}
else {
	say = "Great result!";
}
		</code></pre></p>
		<h3>Operators</h3>
		<p><b>Comparison operators</b> are used to determine equality or difference between values or variables.</p>
		<p><table class="table table-striped table-bordered table-condensed">
		<tr><td>==</td><td>  equal to</td></tr>
		<tr><td>===</td><td>  equal value and equal type</td></tr>
		<tr><td>!=</td><td>  not equal</td></tr>
		<tr><td>!==</td><td>  not equal value or not equal type</td></tr>
		<tr><td>&gt;</td><td>  greater than</td></tr>
		<tr><td>&lt;</td><td>  less than</td></tr>
		<tr><td>&gt;=</td><td>  greater than or equal to</td></tr>
		<tr><td>&lt;=</td><td>  less than or equal to</td></tr>		
		</table></p>
		
		<p><b>Logical operators</b> allows you to combine multiple conditions into one expression.</p>
		<p><table class="table table-striped table-bordered table-condensed">
		<tr><td>&amp;&amp;</td><td>  and</td></tr>
		<tr><td>||</td><td>  or</td></tr>
		<tr><td>!</td><td>  not</td></tr>	
		</table></p>
		<subpage icon="play-circle" title="Conditional Web Application">
			<a class="jsbin-embed" href="http://jsbin.com/jenuxa/embed?output">Example on JSBin</a>
		</subpage>
<bookmark title="w3schools Conditions" url="http://www.w3schools.com/js/js_if_else.asp"/>
		</section>
		<section type="success" title="SKILLS">
		<exercise file="xc/06.01.xml"/>
		<exercise file="xc/06.02.xml"/>
		<exercise file="xc/06.03.xml"/>
		<exercise file="xc/06.05.xml"/>
		<exercise file="xc/06.07.xml"/>
		<exercise file="xc/06.08.xml"/>
		<exercise file="xc/06.09.xml"/>
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge06.png" alt="Badge 6" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why and where do I need conditions?</li>
		<li>How can I write a conditional statement (if)?</li>
		<li>How can I write an alternative path (else)?</li>
		<li>What kind of operators there are available?</li>
		<li>How to debug conditional code?</li>
		<li>How do I make conditional features on a web page?</li>
		</ol>
		</section>
	</part>
	

	<part title="7 Functions" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<slides title="Slideshow" url="slides/part7.html"/>
		<p>
		A JavaScript function is a block of code designed to perform a particular task. A JavaScript function is executed by invoking it (calling it).</p>
		<p><br/>Values can be passed to a function, and the function can return a value.</p>
		<p><img src="img/urlsquirrel_function.png" class="bordered"/></p>
        <p>JavaScript contains a lot of core API functions for different purposes. One example is alert function which is used to show alert messages to the user.</p>
        <p><pre><code>//Example usage of alert function
alert("This is alert message");</code></pre></p> 
            <bookmark title="Try it yourself" url="http://www.w3schools.com/js/tryit.asp?filename=tryjs_alert"/>            
		<p>Function is defined with <b>function</b> keyword followed by a function name and parentheses. The code to be executed by the function, is placed inside curly brackets {}</p>
<p><pre><code>
function name(parameter1, parameter2) {
 code to be executed
}</code></pre></p>
<p>
The function will stop when <b>return</b> statement is reached. If the function was invoked from JavaScript statement, it will return executing the code after invoking statement.
</p>
<p><pre><code>
// Function example
var a = calcSum(5, 12);  // Function call, sum is returned to variable a

function calcSum(x, y) {
  return x + y;         // Function stops and returns  
}</code></pre></p>
            <p>JavaScript <b>methods</b> are the actions that can be performed on objects. Methods are saved as a property containing a function definition. Good example of methods are Math objects methods. The Math object allows you to perform mathematical tasks.</p>
<p><pre><code>
// Math example
Math.sqrt(10);  // Returns the square root of 10 
</code></pre></p>
<p>
<b>Why functions?</b>
You can reuse code by defining the code once, and use it many times. You can use the same code many times with different arguments, to produce different results.
</p>
<bookmark title="w3schools Functions" url="http://www.w3schools.com/js/js_functions.asp"/>
		</section>
		<section type="success" title="SKILLS">
			<exercise file="xc/07.05.xml"/>
			<exercise file="xc/07.06.xml"/>
			<exercise file="xc/07.07.xml"/>
			<exercise file="xc/07.08.xml"/>
			<exercise file="xc/07.09.xml"/>
			<exercise file="xc/07.10.xml"/>
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge07.png" alt="Badge 7" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why and where do I need functions?</li>
		<li>How do I define a function?</li>
		<li>How do I call a function?</li>
		<li>What is a parameter?</li>
		<li>What is a return value?</li>
		<li>How do I pass a parameter to a function?</li>
		<li>How do I use a parameter inside a function?</li>
		<li>How do I return a value from a function?</li>
		<li>How do I save a return value from a function?</li>
		</ol>
		</section>
	</part>
	
	<part title="8 Loops" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<slides title="Slideshow" url="slides/part8.html"/>
		<p><img src="img/urlsquirrel_loop.png" class="bordered"/></p>
		<p>There are situations when we need to execute a block of code several number of times, and is often referred to as a loop</p>
		<p>JavaScript has three main looping mechanism</p>
		<ul>
		<li>For loop</li>
		<li>While loop</li>
		<li>Do-While loop (not covered in this course)</li>		
		</ul>
		<h2>While loop</h2>
		<p>A while loop is suitable, if you don't know how many times loop should be repeated</p>
		<p>The syntax of a while loop is</p>
		<p><pre><code>while(condition)
{
   block of code to be executed
}</code></pre></p>
<p>The following while loop iterates as long as n is less than five.</p>
<p><pre><code>var n = 0;
while (n &lt; 5) {
  n++;
  //more statements
}</code></pre></p>
		<h2>For loop</h2>
		<p>The syntax of a for loop is</p>
		<p><pre><code>for(initialization; condition; update)
{
   block of code to be executed
}</code></pre></p>
<p>The following for statement starts by declaring the variable i and initializing it to 0. It checks that i is less than ten, performs the two succeeding statements, and increments i by 1 after each pass through the loop.</p>
		<p><pre><code>
// For loop example
for (var i = 0; i &lt; 10; i++) {
   console.log(i);
   // more statements
}
</code></pre></p>

		<subpage icon="play-circle" title="Animation">
			<p>With <b>setInterval</b>-function you can create animations on your web page. Executing setInterval(callbackFunction, timeout) will continue calling the given callbackFunction continuously with the given timeout.</p>
			<br/>
			<a class="jsbin-embed" href="http://jsbin.com/ludowo/embed?js">Example on JSBin</a>
		</subpage>
		</section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge08.png" alt="Badge 8" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why and where do I need loops?</li>
		<li>How do I make an endless loop?</li>
		<li>How do I make a loop that stops?</li>
		<li>How do I make a while loop?</li>
		<li>How do I make a for loop?</li>
		<li>When should I use a for loop?</li>
		<li>When should I use a while loop?</li>
		<li>How do I make an animation on a web?</li>
		</ol>
		</section>
	</part>
	

	<part title="9 Arrays" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		<p><b>Arrays</b> are used to store multiple values in a single variable</p>
<p><pre><code>// Array syntax
var arrayName = [item1, item2, item3,...];</code></pre></p>	
<p><pre><code>// Array example
var pets = ["Dog", "Cat", "Snake"];</code></pre></p>
<p>You refer to array elements by using the index number. Indexing of array elements starts from 0.</p>
<p><pre><code>// Referring example
var myPet = pets[0]; // myPet is Dog</code></pre></p>
<p>Arrays has property <b>length</b> which returns the number of elements in the array.</p>
<p><pre><code>// Array length property
var a = pets.length;</code></pre></p>
<h3>Looping the arrays</h3>
<p>The best way to loop through arrays are using <b>for</b>-loops and <b>length</b> property</p>
<p><pre><code>// Looping the arrays
var index;
var pets = ["Dog", "Cat", "Snake"];
for (index = 0; index &lt; pets.length; index++) {
	text = text + pets[index];
}</code></pre></p>

<bookmark title="w3schools Arrays" url="http://www.w3schools.com/js/js_arrays.asp"/>			
		</section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge09.png" alt="Badge 9" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why and where do I need arrays?</li>
		<li>How do I put numbers in an array?</li>
		<li>How do I put strings in an array?</li>
		<li>How do I put objects in an array?</li>
		<li>How to loop an array with a forEach-callback?</li>
		</ol>
		</section>
	</part>
	

	<part title="10 Objects" icon="briefcase" type="default">
		<section type="success" title="KNOWLEDGE">
            <p>Objects are variables that can contain multiple values. The following code assigns many values to variable named student.</p>
            <p><pre><code>var student = {firstname:"John", lastname:"Smith", studentnr=100232, department="IT"};</code></pre></p>    
            <p>The values are written as <b>name:value</b> pairs. The name:value pairs are called as <b>properties</b></p>
            <p>You can access object properties in two ways:</p>
<p><pre><code>objectName.propertyName</code></pre></p>
            <p>or</p>
<p><pre><code>objectName[propertyName]</code></pre></p>
<p><pre><code>//Example
student.firstname; // is John</code></pre></p>
<bookmark title="w3schools Objects" url="http://www.w3schools.com/js/js_objects.asp"/>	                     
		</section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge10.png" alt="Badge 10" class="badgeicon"/></badgeImg>
		<ol>
		<li>Why and where do I need Objects?</li>
		<li>How do I save structured data on a single variable?</li>
		<li>How do I create an object literal?</li>
		<li>What is an attribute?</li>
		<li>What is an attribute name?</li>
		<li>What is an attribute value?</li>
		<li>What is a method?</li>
		<li>How do I read data from an attribute?</li>
		<li>How do I change the attribute value?</li>
		<li>How do I create an object with the new-notation?</li>
		<li>How do I collect object data from a web page form?</li>
		<li>How do I print object data on a web page?</li>
		</ol>
		</section>
	</part>
	

	<part title="11 Application Lifecycle" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		</section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge11.png" alt="Badge 11" class="badgeicon"/></badgeImg>
		<ol>
		<li>What is a software development project?</li>
		<li>How to gather software requirements?</li>
		<li>How to design an application?</li>
		<li>How to test an application?</li>
		<li>How to handle the deployment?</li>
		<li>How to handle the maintenance?</li>
		<li>Why do you need documentation?</li>
		<li>What is a revision control system?</li>
		</ol>
		</section>
	</part>
	
	
	<part title="12 Development methods" icon="briefcase" type="default">
		<section type="info" title="KNOWLEDGE">
		</section>
		<section type="success" title="SKILLS">
		</section>
		<section type="info" title="CHECKPOINT">
		<badgeImg><img src="img/badge12.png" alt="Badge 12" class="badgeicon"/></badgeImg>
		<ol>
		<li>What is a waterfall model?</li>
		<li>What is an agile method?</li>
		<li>What are the principles of agile software development?</li>
		<li>What is Scrum?</li>
		<li>What is Kanban?</li>
		<li>What is Lean?</li>
		</ol>
		</section>
	</part>
	
	<part title="ROUNDUP" icon="refresh" type="default">
		<section type="info" title="KNOWLEDGE">
		</section>
		<section type="success" title="SKILLS">
		</section>
	</part>


	<part title="EXAM" icon="time" type="default">
		<section type="info" title="INSTRUCTIONS">
			<ul>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
				<li>asdf qwerty</li>
			</ul>
		</section>
		<section type="success" title="TAKE THE EXAM">
			<exam title="Start" url="http://www.google.com"/>
		</section>
	</part>
</course>
	
